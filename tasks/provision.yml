---
- name: Create a resource group
  azure_rm_resourcegroup:
    name: "{{ azure_resource_group_name }}"
    location: "{{ azure_location }}"
    tags:
      environment: "{{ env | default('') }}"
  ignore_errors: yes

- name: ensure availability set exists
  azure_rm_availabilityset:
    name: "{{ azure_availability_set }}"
    location: "{{ azure_location }}"
    resource_group: "{{ azure_resource_group_name }}"
    sku: Aligned
  when: use_availability_set|bool

- name: Create virtual network
  azure_rm_virtualnetwork:
    resource_group: "{{ azure_resource_group_name }}"
    name: "{{ azure_virtual_network_name }}"
    address_prefixes: "{{ azure_virtual_network_prefixes }}"

- name: Add subnet
  azure_rm_subnet:
    resource_group: "{{ azure_resource_group_name }}"
    name: "{{ azure_subnet_name }}"
    address_prefix: "{{ azure_subnet_prefixes }}"
    virtual_network: "{{ azure_virtual_network_name }}"

- name: Create Network Security Group
  azure_rm_securitygroup:
    resource_group: "{{ azure_resource_group_name }}"
    name: "{{ azure_security_group_name }}"
    rules:
      - name: SSH
        protocol: Tcp
        destination_port_range: 22
        access: Allow
        priority: 1001
        direction: Inbound
      - name: WINRM
        protocol: Tcp
        destination_port_range: 5986
        access: Allow
        priority: 1002
        direction: Inbound
      - name: RDP
        protocol: Tcp
        destination_port_range: 3389
        access: Allow
        priority: 1003
        direction: Inbound
      - name: MSSQL
        protocol: Tcp
        destination_port_range: 1433
        access: Allow
        priority: 1004
        direction: Inbound
      - name: HTTP
        protocol: Tcp
        destination_port_range: 80
        access: Allow
        priority: 1005
        direction: Inbound
      - name: HTTPS
        protocol: Tcp
        destination_port_range: 443
        access: Allow
        priority: 1006
        direction: Inbound

- name: Create public IP address
  azure_rm_publicipaddress:
    resource_group: "{{ azure_resource_group_name }}"
    allocation_method: Static
    name: "ip_{{ azure_prefix }}{{ item.name }}"
  loop: "{{ nodes }}"
  when: nodes is defined

- name: Create virtual network inteface card
  azure_rm_networkinterface:
    resource_group: "{{ azure_resource_group_name }}"
    name: "ni_{{ azure_prefix }}{{ item.name }}"
    virtual_network: "{{ azure_virtual_network_name }}"
    subnet: "{{ azure_subnet_name }}"
    ip_configurations:
      - name: ipconfig1
        public_ip_address_name: ip_{{ azure_prefix }}{{ item.name }}
        primary: True
    security_group: "{{ azure_security_group_name }}"
  loop: "{{ nodes }}"
  when: nodes is defined

- name: Create VM
  azure_rm_virtualmachine:
    resource_group: "{{ azure_resource_group_name }}"
    name: "vm-{{ azure_prefix | lower }}-{{ item.name | lower }}"
    availability_set: "{{ azure_availability_set if (use_availability_set|bool) else omit }}"
    vm_size: "{{ item.vm_size }}"
    public_ip_allocation_method: Dynamic
    managed_disk_type: Standard_LRS
    open_ports:
      - 3389
      - 1433
      - "{{ item.ansible_port | default(ansible_port) | default('22') }}"
    os_type: "{{ item.os_type | default('Linux') }}"
    network_interfaces: ni_{{ azure_prefix }}{{ item.name }}
    admin_username: "{{ item.user_name | default('ansible') }}"
    admin_password: "{{ item.root_password | default(ansible_password) }}"
    image: "{{ item.image }}"
    remove_on_absent: all
    tags:
      name: "vm_{{ azure_prefix | lower }}{{ item.name | lower }}"
      environment: "{{ env | default('') }}"
      role: "{{ item.role }}"
      app: "{{ item.app_name }}"
      pod: "{{ item.pod_name | default('') }}"
      user: "{{ item.username | default('') }}"
  async: 7200
  poll: 0
  register: deploy
  loop: "{{ nodes }}"
  when: nodes is defined

- name: Wait for instance creation to complete
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: instances
  until: instances.finished
  retries: "{{ instance_wait_retry_limit }}"
  delay: 10
  loop: "{{ deploy.results }}"

- include_tasks: vm_extension.yml

- name: Waiting for server to come online
  wait_for:
    host: "{{ item.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"
    port: "{{ ansible_port }}"
    timeout: "{{ instance_wait_connection_timeout }}"
  loop: "{{ instances.results }}"
  when:
    - instances.results is defined
    - nodes is defined